#!/usr/bin/env python3

#
# Distributed according to GNU Affero General Public License v3 Only.
# Copyright (C) 2021, John Erling Blad <jeblad@gmail.com>
#

import sys
import os
import argparse
import importlib
import importlib.resources
from pathlib import Path

from hera import *
from hera import _
import hera.subcommands

import hera.logger as logger

def main():
    parser = argparse.ArgumentParser(
        prog=PROG_NAME,
        description=_('Heuristic Reasoning Agent â€“ A framework for creating agents from models, and running and managing the agents.'),
        epilog=_('For further help, check the documentation.'))
    parser.add_argument('-s', '--simulate',
        action='store_true',
        help=_('calculate and allocate, but do not load'))
    parser.add_argument('-v', '--verbose',
        action='count',
        default=0,
        help=_('turn on increasing verbose mode'))
    parser.add_argument('--silent',
        action='store_true',
        help=_('turn off most informal reporting'))
    parser.add_argument('--force',
        action='count',
        default=0,
        help=_('turn on increasing continuation mode'))
    parser.add_argument('-d', '--debug',
        action='store_true',
        help=_('log debug info'))
    parser.add_argument('-c', '--callsign',
        type=str,
        help=_('callsign for the specific agent'))
    parser.add_argument('-i', '--id',
        type=str,
        help=_('id for the specific agent'))
    parser.add_argument('--log-file',
        type=str,
        default='/var/log/pyhera/pyhera.log',
        help=_('file for process logging'))
    parser.add_argument('--pid-path',
        type=str,
        default='/run/pyhera' if os.getuid() == 0 else '/run/pyhera/%s'%(os.getlogin()),
        help=_('path to dir for process identification'))
    parser.add_argument('--pid-file',
        type=str,
        default='%s.pid',
        help=_('file name (a pattern) for process identification'))
    parser.add_argument('--install-path',
        type=str,
        default='/var/lib/pyhera',
        help=_('path to config dir for installation'))
    parser.add_argument('--in-file',
        type=str,
        help=_('file for input'))
    parser.add_argument('--out-file',
        type=str,
        help=_('file for output'))
    parser.add_argument('--work-path',
        type=str,
        default='.',
        help=_('path to config dir for local work'))
    subparsers = parser.add_subparsers(title=_('subcommands'),
        description=_('valid subcommands'),
        help=_('help for subcommands'))

    for name in hera.subcommands.__all__:
        try:
            mod = importlib.import_module('hera.subcommands.%s'%(name))
        except:
            print(sys.exc_info())
        if mod:
            subcmd = mod.Subcmd(name)
            subcmd.make_subparser(subparsers)
    
    args = parser.parse_args()

    Path(args.log_file).mkdir(parents=True, exist_ok=True)
    logger.init(args.log_file, args.debug)

    try:
        args.action(args)
    except Exception as e:
        logger.error(e)
        print(e, file=sys.stderr)
        exit()

if __name__ == '__main__':
    main()
